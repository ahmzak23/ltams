version: '3.8'

services:
  # Application Services
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - API_GATEWAY_URL=http://api-gateway:4000
      - NODE_ENV=development
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - BACKEND_URL=http://backend:8000
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=api-gateway
    depends_on:
      - backend
      - otel-collector

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/ticketdb
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - otel-collector

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/ticketdb
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - otel-collector

  # Observability Stack
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yml

  tempo:
    image: grafana/tempo:2.2.0
    ports:
      - "3200:3200"
    volumes:
      - ./observability/tempo:/etc/tempo
      - tempo_data:/tmp/tempo
    command: -config.file=/etc/tempo/tempo-config.yml

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.81.0
    ports:
      - "4318:4318"   # OTLP HTTP
      - "4317:4317"   # OTLP gRPC
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    volumes:
      - ./observability/otel-collector:/etc/otel
    command: ["--config=/etc/otel/config.yml"]

  alertmanager:
    image: prom/alertmanager:v0.25.0
    ports:
      - "9093:9093"
    volumes:
      - ./observability/alertmanager:/etc/alertmanager
      - alertmanager_data:/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/data'

volumes:
  prometheus_data:
  loki_data:
  tempo_data:
  grafana_data:
  alertmanager_data: 